plugins {
	id 'org.springframework.boot' version '2.6.2'
	id 'io.spring.dependency-management' version '1.0.11.RELEASE'
	id 'org.asciidoctor.jvm.convert' version '3.3.2'
	id 'java'
	id 'jacoco'
}

group = 'com.blockchain'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'
ext {
    snippetsDir = file('build/generated-snippets')
}

configurations {
	asciidoctorExtensions
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

jacocoTestReport {
    reports {
        html.enabled true // html 설정
        csv.enabled true // csv 설정
        xml.enabled false // xml 미설정
    }
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-validation'

	implementation 'org.apache.httpcomponents:httpclient:4.4.1'

	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'

	asciidoctorExtensions 'org.springframework.restdocs:spring-restdocs-asciidoctor'

	testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.restdocs:spring-restdocs-mockmvc'

	implementation 'org.mapstruct:mapstruct:1.4.1.Final'
    implementation 'org.projectlombok:lombok-mapstruct-binding:0.2.0'

    annotationProcessor "org.mapstruct:mapstruct-processor:1.4.1.Final"
    annotationProcessor "org.projectlombok:lombok-mapstruct-binding:0.2.0"
	annotationProcessor "org.projectlombok:lombok:1.18.16"

	runtimeOnly 'com.h2database:h2'
	
}

asciidoctor {
    configurations 'asciidoctorExtensions'
    inputs.dir snippetsDir
    dependsOn test
}

test {
	outputs.dir snippetsDir
	useJUnitPlatform()
}

bootJar {
    dependsOn asciidoctor
    copy {
        from"${asciidoctor.outputDir}"
        into 'src/main/resources/static/docs'
    }
}



